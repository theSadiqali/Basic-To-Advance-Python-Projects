"""#let Start 
#complete python programming
print("Hello World")

#How to write comment ---- Single line comment 
Multi line comment ----- Multi LIne commen
print("sadiq ali")"""

#creating Variable 

"""x = 500000 
y = "Sadiq Ali"
print(x)
print(y)"""

"""#Specify the data type of a Variable 
#Get the Data Type
x = str(3)
y = int(3)
z = float(3)
s = "Sadiq"
S = "Ali"   # S will not overwrite s

print (type(x))
print (type(y))
print (type(z))
print (type(s))
print ( type(S))"""

"""#legal Variable Names

myvar = "Sadiq"
my_var = "Sadiq"
_my_var = "Sadiq"
myVar = "Sadiq"
MYVAR = "SADIQ"
myvar2 = "Sadiq" """

#Many Value to Multiple Variable 
#you can also do that 
"""
names = ["sadiq", "ali", "thesadiqali"]
x, y, z = names
print(x)
print(y)
print(z)
"""
#OUtput the Variable 
"""
x = "sadiq ali is making a python tutorial"
print (x)
"""
#Global Variable 
"""
x = "sadiq"

def myfunc():
    print("My first name is " + x)
    
myfunc()
"""


#Or we can use Global 
"""
def myfunc():
    global x
    x = "sadiq"
  
myfunc()
print("My first name is " + x)
"""
#lets talk about Data type
#converting from one type to another 
"""
x = 1    #int
y = 3.6  #float
z = 1j   #complex

#converting from int to float:
a = float(x)

#converting from float to int

b = int(y)

#converting from int to complex 
c = complex(x)

print(a)
print(b)
print(c)
print("Display the Types")
print(type(a))
print(type(b))
print(type(c))

"""

# we use import random to display random numbers
"""
import random
print(random.randrange(1,20))

"""

#loop

#loop through variable 
"""
for x in "sadiq":
    print (x)"""

#print each fruits in a fruits list
#what if we do not want to print mango...
"""
fruits = ["apple", "cherry", "mango", "orange", "grapes"]
for x in fruits:
    if x == "mango":
        continue
    print(x)"""
    
    
#now let use parameter 

"""for x in range(2,5):
    print(x)
    """
    
    
#let break the loop 
"""
for x in range(6):
    if x == 3: break   # 0,1,2,(3) break the loop 
    print(x)
    
else:
    print("finished")
    
"""
#Nested Loop
"""
adj = ["red", "big", "tasty"]
fruits = ["apple", "orange", "mango"]

for x in adj:
    for y in fruits:
        print(x,y)   #NESTED 

"""

#if statement 
"""
a = 5
b = 0
c = 5

if b > a :
    print ("b is greater then a")
    
elif a == c:
    print ("a is equal to c")
    
else:
    print("a is greater then b")
"""
"""
a = 10
b = 50
if not a > b:
    print("a is not GREATER THAN B")

#test if a is not greater then b
"""

#python while loop 
"""
i = 1
while i <= 6:
    print(i)
    
    if i == 3:
        break  #Let see 
    i += 1


"""
#print the message once the condition is false 
"""
i = 1
while i < 6:
    print(i)
    i +=1
else:
    print("i is no longer less then 6")

"""

#IN python a function is defined by def keyword
"""
def myfun(firstname, lastname):
    print(firstname + "   " + lastname)

myfun("Sadiq", "Ali")
"""
#you can also send argument with key = value syntax
#and this way the order of argument does not matter 
"""
def myfunc(child3, child2, child1, child0):
    print("the youngest child is  "+ child0)
    print("the youngest child is  "+ child1)
    
myfunc(child3= "sadiq", child2= "ali", child1= "qasid", child0= "yasir")

"""
# If we call the function without argument it uses the default values
#Lambda Function 
#Python Lambda function is a small anonmous function.
#lambda function can take any numbers 
"""
x = lambda a,b,c : a + b * c
print(x(2,1,3))
"""

#why use lambda func
#better shown when use them anonymous func inside another function
"""
def myfunc(n):
    return lambda a : a * n

mydoubler = myfunc(2)
mytrippler = myfunc(3)

print(mydoubler(11))
print(mytrippler(11))


"""

#Array 
# Array is a special variable, which can hold more then one value at a time 
"""
name1 = "sadiq"
name2 = "ali"
name3 = "qasid"
name4 = "yasir"

names = ["sadiq", "yasir", "qasid", "hassan"]
names[1] = "ali"  #lets modify the array 
print(names)

"""

#python classes/objects
#python is an object oriented programming language.

#A class is like a an object constructor or a blueprint for creating objects
#to create class use the keyword class:
"""class sadiq:
    x = 5

print(sadiq)

"""
#lets create a class name person, use the init function to assign values for name and age
"""
class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age 
        
p1 = Person("Sadiq", 22)
print(p1.name)
print(p1.age)
"""

#Inheritance 
#Inheritance allow us to defined a class that inherit all the method and properties from another class

#parent class---base class
#child class ---derived class
 #lets create a parent class 
 
 #example create a class named person with first name and last name properties and printname 

""""
 
class Person:
    def __init__(self, fname, lname):
        self.firstname  = fname
        self.lastname = lname
         
    def printname(self):
        print(self.firstname, self.lastname)
        #indentation matter the most in python 
        
x = Person("sadiq", "ali")
x.printname()
"""
#add a method called welcome to the student class
"""class Person:
      def __init__(self, fname, lname):
        self.firstname = fname
        self.lastname = lname

      def printname(self):
        print(self.firstname, self.lastname)

class Student(Person):
  def __init__(self, fname, lname, year):
    super().__init__(fname, lname)
    self.graduationyear = year

  def welcome(self):
    print("Welcome", self.firstname, self.lastname, "to the class of", self.graduationyear)

x = Student("Sadiq", "Ali", 2023)
x.welcome()

"""

#Thank you soo much for watching this video 
#we will upload advance python tutorial soon 
#stay tune 
#Please subscribe this channel 













































































    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

















